{"version":3,"sources":["components/Header.jsx","store/actions/itemActions.js","components/Items.jsx","App.js","store/reducers/index.js","store/reducers/rootReducer.js","index.js"],"names":["Header","renderInput","_ref","input","label","meta","react_default","a","createElement","className","Object","assign","autoComplete","_this","renderError","onSubmit","search","props","searchResult","scroller","scrollTo","duration","delay","smooth","error","_ref2","touched","this","handleSubmit","Field","name","component","Component","formWrapped","reduxForm","form","validate","formValues","errors","connect","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","get","concat","sent","type","payload","data","collection","items","slice","stop","_x","apply","arguments","Items","map","item","elem","index","key","title","date_created","description","length","substring","src","links","href","alt","undefined","renderList","state","values","App","components_Header","components_Items","combineReducers","action","reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5001b5d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { searchResult } from '../store/actions/itemActions';\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\n\nclass Header extends Component {\n  componentDidMount(){\n    scroller.scrollTo('app', {\n      duration: 500,\n      delay: 0,\n      smooth: true,\n    });\n  };\n\n  renderError({ error, touched }){\n    if(touched && error){\n      return <div className=\"app__header--error\">{error}</div>\n    }\n  };\n  renderInput = ({ input, label, meta }) => {\n      return (\n        <div className=\"app__search\">\n          <label>{label}</label>\n          <input {...input} autoComplete=\"off\"/>\n          {this.renderError(meta)}\n        </div>\n      );\n  }\n  onSubmit = (search) => {\n    this.props.searchResult(search.search);\n    scroller.scrollTo('app__results', {\n      duration: 1800,\n      delay: 100,\n      smooth: true,\n    });\n  }\n  render() {\n    return (\n      <header className=\"app__header\">\n        <h1 className=\"app__header--title\">SPACER</h1> \n        <p>Begin your journey through aour amazing galaxy,\n        ans discover places you never even heard of.</p>    \n        <form onSubmit={this.props.handleSubmit(this.onSubmit)} >\n          <Field name=\"search\" component={this.renderInput} label=\"Type anything space-related to start.\"/>\n        </form>\n      </header>\n    )}\n};\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if(!formValues.search){\n    errors.search = 'The field is required';\n  }\n  return errors;\n};\n\nconst formWrapped = reduxForm({ \n  form: 'searchResult',\n  validate\n})(Header);\n\nexport default connect(null, { searchResult})(formWrapped);","import axios from 'axios';\n\nexport const searchResult = search => async dispatch => {\n  const response = await axios.get(`https://images-api.nasa.gov/search?q=${search}&media_type=image`);\n  dispatch({\n    type: 'SEARCH_RESULT',\n    payload: response.data.collection.items.slice(0,20)\n  })\n};\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Items extends Component {\n  renderList(){\n    return (this.props.items.map(item => {\n      return (item.map((elem, index) => {\n        return(\n          <div className=\"app__results__container--item\" key={index}>             \n              <div className=\"app__results__container--item--data\">\n                <h2>{elem.data[0].title}</h2>\n                <h3>{elem.data[0].date_created}</h3>\n                <p>\n                {elem.data[0].description.length > 600 ? elem.data[0].description.substring(0,600) + '...' : null}</p>\n              </div>              \n              <img src={elem.links[0].href} alt=\"\"/>\n          </div>\n        )\n      }));\n    }));\n  };\n  render(){\n    const { items } = this.props.items;\n    return (\n      <div className=\"app__results\">\n        <div className=\"app__results__container\">\n          {this.props.items === [] || this.props.items === undefined ? null : this.renderList()}\n        </div>\n      </div>\n    )\n  };\n};\n\nconst mapStateToPops = (state) => {\n  return {items: Object.values(state.items)}\n};\nexport default connect(mapStateToPops)(Items);","import React from 'react';\nimport Header from './components/Header';\nimport Items from './components/Items';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Header/>\n      <Items />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport rootReducer from './rootReducer';\nimport { reducer } from 'redux-form';\n\nexport default combineReducers({\n    items: rootReducer,\n    form: reducer\n});","\nexport default (state = [], action) => {\n    switch(action.type){\n        case 'SEARCH_RESULT':\n            return [action.payload];\n        default:\n            return state;\n    };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport combineReducers from '../src/store/reducers/index';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(combineReducers, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}